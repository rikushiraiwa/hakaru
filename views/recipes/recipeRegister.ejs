<% layout('layout/boilerplate') %>

<body>
    <div class="container mt-4">
        <h2 class="text-center">レシピを追加してください</h2>

        <div class="mb-3 mt-3 d-flex justify-content-center">
            <!-- アイテム追加ボタン -->
            <button id="addItemBtn" class="btn btn-success m-1" data-bs-toggle="modal" data-bs-target="#addItemModal">
                アイテムを追加
            </button>
            <button class="btn btn-danger m-1" onclick="deleteSelectedRows()">選択したアイテムを削除</button>
        </div>

        <!-- レシピ名と画像のバリデーション用フォーム -->
        <form id="recipeForm" novalidate>
            <div class="row">
                <!-- レシピ名の入力 -->
                <div class="col-md-6 mb-3">
                    <label for="recipeName">レシピ名</label>
                    <input type="text" class="form-control" id="recipeNameInput" name="recipeName" required>
                    <div class="valid-feedback">問題ありません！</div>
                    <div class="invalid-feedback">レシピ名を入力してください。</div>
                </div>

                <!-- 画像アップロードフィールド -->
                <div class="col-md-6 mb-3">
                    <label for="recipeImage">レシピ画像をアップロード</label>
                    <input type="file" class="form-control" id="recipeImage" name="recipeImage" accept="image/*" required>
                    <div class="valid-feedback">画像が正常にアップロードされました！</div>
                    <div class="invalid-feedback">レシピの画像をアップロードしてください。</div>
                </div>
            </div>
        </form>

        <table id="recipeTable" class="table table-bordered table-striped table-hover table-sm">
            <thead class="thead-light">
                <tr>
                    <th>選択</th>
                    <th>アイテム名</th>
                    <th>内容</th>
                    <th>単価</th>
                    <th>使用量</th>
                    <th>使用料金</th>
                </tr>
            </thead>
            <tbody>
                <!-- テーブルはJavaScriptで動的に更新 -->
            </tbody>
        </table>

        <!-- レシピ追加モーダル -->
        <div class="modal fade" id="addItemModal" tabindex="-1" role="dialog" aria-labelledby="addItemModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addItemModalLabel">新しいアイテムを追加</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="閉じる"></button>
                    </div>
                    <div class="modal-body">
                        <!-- アイテム追加用フォーム -->
                        <form id="modalItemForm" class="needs-validation" novalidate>
                            <div class="form-group">
                                <label for="itemName">アイテム名</label>
                                <select name="itemName" id="itemSelect" class="form-select" required onchange="toggleNewItemField()">
                                    <option value="">アイテムを選択</option>
                                    <% stocks.forEach(stock => { %>
                                        <option value="<%= stock.itemName %>"><%= stock.itemName %></option>
                                    <% }) %>
                                    <option value="new">+ 新しいアイテムを追加</option>
                                </select>
                                <div class="invalid-feedback">アイテムを選択してください。</div>
                                <input type="text" id="newItemName" class="form-control mt-2" placeholder="新しいアイテム名を入力" style="display:none;">
                            </div>
                            <div class="form-group">
                                <label for="content">内容</label>
                                <input type="string" class="form-control" name="content" required>
                                <div class="invalid-feedback">内容を入力してください。</div>
                            </div>
                            <div class="form-group">
                                <label for="amountUsage">使用量</label>
                                <input type="number" class="form-control" name="amountUsage" required>
                                <div class="invalid-feedback">使用量を入力してください。</div>
                            </div>

                            <div class="d-flex justify-content-center">
                                <button type="button" class="btn btn-success m-4" onclick="addItem()">アイテムを追加</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- レシピ全体を保存 -->
        <div class="text-center mt-3">
            <button type="button" class="btn btn-primary" id="saveRecipeBtn">レシピを保存</button>
        </div>

        <div class="total-container text-right mt-3">
            <p class="font-weight-bold">合計: <span id="totalValue"></span></p>
        </div>
    </div>

    <!-- ローディングスピナー -->
    <div id="loadingSpinner" class="justify-content-center align-items-center" style="display:none !important; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(255,255,255,0.8); z-index:9999;">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">読み込み中...</span>
        </div>
    </div>

    <!-- サーバーサイドから受け取った stocks データをクライアントサイドで使えるように定義 -->
    <script>
        const stocks = <%- JSON.stringify(stocks) %>
    </script>

    <!-- JavaScriptファイルの読み込み -->
    <script src="/js/recipe.js"></script>

</body>
</html>
